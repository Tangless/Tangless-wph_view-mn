import * as tomato from "@po-to/tomato";
import * as tdom from "@po-to/tomato-jquery";
import * as project from "views/global/common/Project";
import * as funs from "views/global/common/Funs";
import * as track from "views/global/common/Track";
import * as model from "views/global/common/Model";
import * as api from "views/global/common/API";
import * as swiper from 'swiper';
import * as Vue from "vue";
import * as countUp from 'countUp';
import demandDetail = require('views/m/DemandDetail');
import RepairEditCurrent = require('views/m/RepairEditCurrent');

class VPresenter extends project.VPresenter {
    // private _header: tomato.VPresenter;
    private footer: tomato.VPresenter;
    private telButtonToTop: number;
    private footerH: number;
    private errorTip: JQuery;
    private errorData: JQuery;
    private _phone: JQuery;
    private _countFlag: boolean;
    constructor(view: tomato.VPView, parent?: tomato.VPresenter, vpid?: string) {
        super(view, parent, vpid);
        this.errorTip = this.find(".errorTip");
        this.errorData = this.find(".errorInfo");
        this._phone = this.find(".phone");
        this._countFlag = true;
        let that = this;
        var selected_city = model.globalData.selected_city;
        var demandLists = model.globalData.demand;
        var demandNum;
        if(demandLists){
            demandNum=demandLists.length;
        }else{
            demandNum=0;
        }
        
        //如果没有进行中的项目
        if (demandNum == 0) {
            this.find(".no-demand ").removeClass("hide");
            var vueDom1 = this.find(".location").get(0);
            new Vue({
                el: vueDom1,
                data: {
                    city: selected_city,
                }
            });
            var vueDom2 = this.find(".location").get(1);
            new Vue({
                el: vueDom2,
                data: {
                    city: selected_city,
                }
            });
            // var vueDom3 = this.find(".location").get(2);
            // new Vue({
            //     el: vueDom3,
            //     data: {
            //         city: selected_city,
            //     }
            // });
            /** 如果是晚上（21:00-－08:00），替换界面元素及事件 */
            var myDate = new Date();
            var hours = myDate.getHours();
            if (hours >= 21 || hours < 8) {
                this.find('.bigRepairBtn').removeAttr('href').html('<span class="icon-message02"></span>客服在线，立即咨询').attr('evt', 'openPop');
                this.find('.bubbles').html('在线出报价哦…<em class="horn"></em>').css('width', '1.1rem');
                this.find('.button').removeAttr('href').attr('evt', 'openPop');
            }
        } else {
            //有项目
            this.find('.has-demand').removeClass('hide');
            this.find('.demand-num').text(demandNum);
            //登陆且有项目的用户，数据绑定
            var pro_inquiry = this.find('.has-demand')[0];
            var demd = model.globalData.demand;
            var unread = model.globalData.unread_num;
            // var demandLists = [{ name: "室内高清屏安装" }, { name: "户外高清屏维修" }, { name: "室内高清屏维修" }, { name: "户外高清屏安装" }];
            var pro: any = new Vue({
                el: pro_inquiry,
                data: {
                    demand: demd,
                    unread: unread,
                    demandLists: demandLists
                },
            });
            var pro_inquiry2 = this.find('.has-demand')[1];
            var pro: any = new Vue({
                el: pro_inquiry2,
                data: {
                    demand: demd,
                    unread: unread,
                    demandLists: demandLists
                },
            });
            if (!(demandLists.length == 1)) {
                //存在多个项目
                this.find('.show-more').removeClass('hide');
            }
        }
        let go;
        go = setInterval(that.run, 30000);
        that.setData();
        var a = swiper;
        this.callSwiper();
        var a = countUp;

        /** 如果是晚上（21:00-－08:00），替换界面元素及事件 */
        var myDate = new Date();
        var hours = myDate.getHours();
        if (hours >= 21 || hours < 8) {
            this.find('.bigRepairBtn').removeAttr('href').html('<span class="icon-message02"></span>客服在线，立即咨询').attr('evt', 'openPop|repairConsult');
            this.find('.bubbles').html('在线出报价哦…<em class="horn"></em>').css('width', '1.1rem');
            this.find('.button').removeAttr('href').attr('evt', 'openPop|repairConsult');
        }

        /**报修 */
        $(this.find('.btn-repair')).on('click', function () {
            // 百度统计
            that._evt_repair400();
        });
        /**弹出浮条*/
        $(".button").on("click", function () {
            that._evt_repair400();
        });
        this._watchEvent();
        this._els = this._getElements();
    }
    /**展开项目列表 */
    _evt_showMore() {
        $('.has-demand').addClass("show-demand-list");
    }
    /**收起项目列表 */
    _evt_closeUp() {
        $('.has-demand').removeClass("show-demand-list");
    }
    /**打开详情 */
    _evt_openDetail(data, target, hit) {
        //修改选中类型
        var name = target.innerHTML;
        var index = $(target).attr("index");
        // alert(name + "::" + index);
        model.globalData.current_demand = model.globalData.demand[index];
        tomato.getVPresenter<demandDetail>(funs.moduleToUrl('m/DemandDetail'), (demandDetail) => {
            demandDetail.vpid = demandDetail.vpid.replace(/\?(demand=\d*)?/, '?demand=' + model.globalData.current_demand.id);
            funs.loadPage(demandDetail);
        })
        this._evt_closeUp();
        // /**测试编辑项目 */
        //  tomato.getVPresenter<RepairEditCurrent>(funs.moduleToUrl('m/RepairEditCurrent'), (RepairEditCurrent) => {
        //      RepairEditCurrent.setInit(2);
        //     funs.loadPage(RepairEditCurrent);
        // })
    }
    /**打开聊天室 */
    _evt_openChatRoom() {
        //将临时数据更改为自己的项目的数据
        model.globalData.currIsSelfDemand = true;
        tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/ChatRoom'), (ChatRoom) => {
            //弹出详情页
            funs.loadPage(ChatRoom);
        })
        this._evt_closeUp();
    }
    /**报装新屏幕 */
    _evt_createDemand() {
        tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/RepairTypeSelect'), (RepairTypeSelect) => {
            //登录窗
            tdom.open(RepairTypeSelect, tdom.DialogTarget.Blank, {
                size: { width: '90%', height: tomato.DialogSize.Content },
                effect: tdom.DialogEffect.scale,
                masked: true
            });
        });
    }
    /**swiper */
    private callSwiper() {
        var mySwiper = new Swiper('.swiper-container', {
            direction: 'horizontal',
            // 如果需要分页器
            paginationClickable: true,
            pagination: '.swiper-pagination',

            // 如果需要前进后退按钮
            nextButton: '.swiper-button-next',
            prevButton: '.swiper-button-prev',
            noSwiping: true,
            //autoplay : 5000,
            //设置为true时，鼠标覆盖Swiper时指针会变成手掌形状，拖动时指针会变成抓手形状
            //grabCursor : true,
            slideToClickedSlide: true,//设置为true则点击slide会过渡到这个slide。
        })
    }
    /**检测手机号 */
    private checkPhone(phone) {
        if (!(/^1(3|4|5|7|8)\d{9}$/.test(phone))) {
            return false;
        }
        return true;
    }
    private run() {
        var tHours = 0;
        var tMinutes = 0;
        var that = this;
        var date = new Date();
        //console.log(date.getMinutes()+"::"+(date.getMinutes()-parseInt(tMinutes)));
        if ((date.getMinutes() - tMinutes == 0)
            && (date.getHours() - tHours == 0)) {
            //alert(tMinutes+""+tMinutes);
            that.setData();//要执行的方法
        }
    }
    private setData() {
        var date = new Date();
        var day = date.getDate().toString();
        day = day.substr(day.length - 1, 1);
        console.log(day);
        switch (day) {
            case "1":
                $(".tanglar-1").text('34');
                $(".tanglar-2").text('29');
                $(".tanglar-3").text('17');
                $(".tanglar-4").text('10');
                $(".tanglar-5").text('7');
                // $(".num-total").text('97');
                break;
            case "2":
                $(".tanglar-1").text('38');
                $(".tanglar-2").text('31');
                $(".tanglar-3").text('22');
                $(".tanglar-4").text('12');
                $(".tanglar-5").text('12');
                // $(".num-total").text('115');
                break;
            case "3":
                $(".tanglar-1").text('51');
                $(".tanglar-2").text('44');
                $(".tanglar-3").text('31');
                $(".tanglar-4").text('23');
                $(".tanglar-5").text('17');
                // $(".num-total").text('166');
                break;
            case "4":
                $(".tanglar-1").text('44');
                $(".tanglar-2").text('36');
                $(".tanglar-3").text('29');
                $(".tanglar-4").text('9');
                $(".tanglar-5").text('9');
                // $(".num-total").text('127');
                break;
            case "5":
                $(".tanglar-1").text('47');
                $(".tanglar-2").text('40');
                $(".tanglar-3").text('27');
                $(".tanglar-4").text('8');
                $(".tanglar-5").text('7');
                // $(".num-total").text('129');
                break;
            case "6":
                $(".tanglar-1").text('48');
                $(".tanglar-2").text('42');
                $(".tanglar-3").text('25');
                $(".tanglar-4").text('13');
                $(".tanglar-5").text('12');
                // $(".num-total").text('140');
                break;
            case "7":
                $(".tanglar-1").text('49');
                $(".tanglar-2").text('43');
                $(".tanglar-3").text('24');
                $(".tanglar-4").text('12');
                $(".tanglar-5").text('11');
                // $(".num-total").text('139');
                break;
            case "8":
                $(".tanglar-1").text('50');
                $(".tanglar-2").text('41');
                $(".tanglar-3").text('23');
                $(".tanglar-4").text('11');
                $(".tanglar-5").text('10');
                // $(".num-total").text('135');
                break;
            case "9":
                $(".tanglar-1").text('39');
                $(".tanglar-2").text('35');
                $(".tanglar-3").text('18');
                $(".tanglar-4").text('9');
                $(".tanglar-5").text('8');
                // $(".num-total").text('109');
                break;
            case "0":
            default:
                $(".tanglar-1").text('46');
                $(".tanglar-2").text('37');
                $(".tanglar-3").text('21');
                $(".tanglar-4").text('11');
                $(".tanglar-5").text('9');
                // $(".num-total").text('124');
                break;
        }
    }
    /**随机数为偶数时，价格为39/小时、49/小时、59/小时 */
    private setPrice() {
        $(".price-unit").text("/小时");
        $(".price-a").text("39");
        $(".price-b").text("49");
        $(".price-c").text("59");
    }
    /**2小时，180天变化 */
    private countAdd() {
        var numSlideAll = new countUp("hours", 0, 2, 0, 5);
        var numSlideSpl = new countUp("days", 0, 180, 0, 5);
        numSlideAll.start();
        numSlideSpl.start();
        this._countFlag = false;
    }
    _evt_openPop() {
        tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/customService/serviceChatPane'), (serviceChatPane) => {
            //聊天界面
            // funs.loadPage(serviceChatPane);
            tdom.open(serviceChatPane,'_blank',{size:{width:"100%",height:"100%"}});
        });
    }
    _evt_openCitySel() {
        tomato.getVPresenter<tomato.VPresenter>(funs.moduleToUrl('m/common/CitySelector'), (CitySelector) => {
            (CitySelector as any).setProv("Repair");
            funs.loadPage(CitySelector);
        })
    }
    _evt_repair400(){
        track.repair_400();
        return true;
    }
    _evt_repairConsult(){
        track.repair_consult();
        return true;
    }
    _afterInstallTo() {
        this.view.parent().scroll(
            () => {
                var scrollTop = this.view.parent().scrollTop();
                var cHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
                var oDiv = document.getElementById('days');
                if ((scrollTop > ((oDiv as HTMLElement).offsetTop - cHeight) && this._countFlag)) {
                    this.countAdd();
                }
            }
        );

        //滚动监听，出现底部询价条
        // if (!this.telButtonToTop) {
        //     this.telButtonToTop = this.find('#tel_button').offset().top;
        // }
        // $(this.view[0].parentNode as any).scroll(() => {
        //     // this._showFooter();
        // })
        // this._showFooter();
    }
    protected _afterUninstallTo() {
        this.view.parent().off('scroll');
        // $(this.view[0].parentNode as any).off('scroll');
    }
}
export = VPresenter;