import * as tomato from "@po-to/tomato";
import * as project from "views/global/common/Project";
import * as funs from "views/global/common/Funs";
import * as model from "views/global/common/Model";
import * as api from "views/global/common/API";

class VPresenter extends project.VPresenter {
    private customServiceId;
    private webim: any;

    constructor(view: tomato.VPView, parent?: tomato.VPresenter, vpid?: string) {
        super(view, parent, vpid);
        this._watchEvent();
        this._els = this._getElements();
        this._setChatHeight();
        var that = this;
        this.customServiceId = '4';//网站客服id
        //聊天界面
        var msgPane = this.find('.chat-pane');
        //输入框输入事件监听
        this.find('#input').on('input propertychange blur', function () {
            //聊天面板滚到底部3t
            msgPane[0].scrollTop = msgPane[0].scrollHeight;
            // $("html,body").animate({scrollTop:9999},100);
            // this.scrollIntoView();
            var v = $(this).val();
            if (v.length > 0 && v.trim().length > 0) {
                that.find('#sendMsg').removeClass("hide").removeAttr('disabled');
                that.find('.enclosure').addClass("hide");
            } else {
                $(this).css('height', '26px');
                that.find('#sendMsg').addClass("hide").attr('disabled', 'disabled');
                that.find('.enclosure').removeClass("hide");
            }
        });
        this.find('#input').click(function () {
            var that = this;
            setTimeout(function () {
                that.scrollIntoView(true);
            }, 100)
        });
        //监听消息发送提交
        this.find('.input-pane').on('submit', function (e) {
            e.preventDefault();
            that._evt_sendMsg();
        });
        //图片选择事件
        $('#imgFile').on('change', function () {
            webimConfigs.sendImage();
        });
        //消息监听
        this.webim = {
            session: that.customServiceId,
            messages: { history: [], news: [] },
            update: function (msgs) {
                var html = '';
                for (var i = 0, j = msgs.length; i < j; i++) {
                    html = html + that.pushMsg(msgs[i]);
                }
                msgPane.append(html);

                var delayTime = 300;
                //如果消息中没有图片,就加快显示速度
                if (html.indexOf('chat-img') < 0) {
                    delayTime = 30;
                }
                //图片加载需要时间,延迟滚动
                setTimeout(function () {
                    msgPane[0].scrollTop = msgPane[0].scrollHeight;
                }, delayTime);

                var id = this.session;
                var lastMsg = msgs[msgs.length - 1].text;
                if (lastMsg.indexOf('chat-img') > 0) {
                    lastMsg = '[图片]'
                }
            },
            history: function (msgs) {
                // 如果历史消息为空，则造一条假的消息，以便洽谈室的历史消息监听能够获得通知，从而移除loading动画；
                if (msgs.length == 1 && msgs[0].type == 'fake') {
                    msgPane.find('.msgLoding').remove();
                    msgPane[0].scrollTop = msgPane[0].scrollHeight;
                    that._setChatHeight();
                    return
                }
                var html = '';
                for (var i = 0; i < msgs.length; i++) {
                    html = that.pushMsg(msgs[i]) + html;
                }
                msgPane.prepend(html);

                //如果消息中没有图片,就加快显示速度
                var delayTime = 300;
                if (html.indexOf('chat-img') < 0) {
                    delayTime = 30;
                }
                //图片加载需要时间,延迟滚动
                setTimeout(function () {
                    msgPane.find('.msgLoding').remove();
                    msgPane[0].scrollTop = msgPane[0].scrollHeight;
                }, delayTime);
                that._setChatHeight();
            }
        };
        webimConfigs.addListener(this.webim);
        // 通过链接直接打开聊天室，或聊天室刷新页面，则等到im初始化完成再调用聊天时初始化方法！！！草！！！
        $(document.body).on('imInit', function () {
            if (webimConfigs.chatRoomReady) {
                var hasSave = localStorage.getItem('hasSavePhone');
                if (model.globalData.user.user_type == 0 && !hasSave) {
                    that.switchSession('4fake');
                } else {
                    that.switchSession('4');
                }

            }
        });
    }
    _afterInstallTo() {
        var hasSave = localStorage.getItem('hasSavePhone');
        if (model.globalData.user.user_type == 0 && !hasSave) {
            this.switchSession('4fake');
        } else {
            this.switchSession('4');
        }
    }
    //  生成登记手机号新消息
    // newMsgToSavePhone() {
    //     // 如果没登陆，且新消息为0,且没登记过
    //     var hasSave = localStorage.getItem('hasSavePhone');
    //     var newMsg = webimConfigs.getPool()['4'].news;
    //     if (model.globalData.user.user_type == 0 && newMsg.length == 0 && !hasSave) {
    //         var fakeNewMsg = [{
    //             type: 'fakeNew',
    //             from: '4',
    //             text: '<div class="one-message"><img class="user-head-icon" src="`{VIEWSURL}`/m/customService/serviceChatPaneTpl/images/jvhua.jpg"><div class="msgbody"><div class="fakeSavePhone"><h5>请先登记排队</h5><input class="form-control mobile" type="tel" placeholder="手机号码" /><button class="btn btn-primary" evt="saveMobile">继续咨询</button></div><img class="triangle" src="`{VIEWSURL}`/m/customService/serviceChatPaneTpl/images/triangle2.png"></div></div>',
    //             flow: 'in'
    //         }];
    //         webimConfigs.setNews('4',fakeNewMsg);
    //     }
    // };
    //切换聊天对象 更新设置
    switchSession(sessionID) {
        this._saveDraft(nim.currSess);
        webimConfigs.setCurrSession(sessionID);
        this.webim.session = sessionID;
        this.webim.messages = { history: [], news: [] };
        // loading gif
        var loadingGif = '<img  class="msgLoding" src="`{VIEWSURL}`/m/ChatRoomTpl/images/loading1.gif" width="96" height= "16"/>'
        $('.chat-pane').html(loadingGif);
    };
    //在聊天窗口显示消息
    pushMsg(msg) {
        var that = this;
        var fromAccount = msg.from;
        var isSelfSend = msg.flow == 'out';//消息是否为自己发的
        var subType = msg.type;//消息类型
        var triangle, userhead;
        var onemsg = '';
        //群普通消息
        if (subType == 'text') {
            //如果自己发的消息
            if (isSelfSend) {
                userhead = '<span class="user-head-icon">您</span>';
                //小三角
                triangle = '<img class="triangle" src="`{VIEWSURL}`/m/customService/serviceChatPaneTpl/images/triangle.png">';
                onemsg = '<div class="one-message self-msg">' + userhead +
                    '<div class="msgbody"><pre>' + msg.text + '</pre>' + triangle +
                    '</div></div>'
            }
            //不是自己发的消息
            else if (fromAccount == '4') {
                //小三角
                triangle = '<img class="triangle" src="`{VIEWSURL}`/m/customService/serviceChatPaneTpl/images/triangle2.png">';
                var src1 = '`{VIEWSURL}`/m/customService/serviceChatPaneTpl/images/jvhua.jpg';
                userhead = '<img class="user-head-icon" src="' + src1 + '"/>';
                onemsg = '<div class="one-message">' + userhead +
                    '<div class="msgbody"><pre>' + msg.text + '</pre>' + triangle +
                    '</div></div>'
            }
            //群提示消息
        } else if (subType == 'notification') {
            return ''
        } else if (subType == 'fakeNew') {
            onemsg = msg.text;
            // 暂时屏蔽输入框
            that.find('.hoverInput').show();
        }
        //如果是图片,去掉<pre>标签
        if (onemsg.indexOf('chat-img') > 0) {
            onemsg = onemsg.replace('<pre>', '').replace('</pre>', '');
        }
        return onemsg
    };
    //发送消息点击事件
    _evt_sendMsg() {
        var that = this;
        var text = $('#input').val();
        if (text.length > 0 && text.trim().length > 0) {
            $('#send').attr('disabled', 'disabled');
            webimConfigs.onSendMsg(text, {
                succ: function (msg) {
                    console.log('发送成功');
                    that.pushMsg(msg);
                    that._clearInput(true);

                },
                fail: function (err) {
                    that.switchSession(that.customServiceId);
                    that._evt_sendMsg();
                }
            });
        }
    };
    //发送图片
    _evt_sendImg(data, obj) {
        this.find('#imgFile').trigger('click');
    };
    //清空输入框后发送按钮隐藏
    _clearInput(focus?: boolean) {
        this.find("#input").val('').css('height', '24px');
        focus && this.find("#input").focus();
        this.find('#sendMsg').addClass("hide").removeAttr('disabled');
        this.find('.enclosure').removeClass('hide');
    };
    // 保存草稿
    _saveDraft(toSel) {
        //保存当前的消息输入框内容到草稿
        var msgtosend = this.find('#input').val();
        var msgLen = msgtosend.trim().length;
        if (msgLen > 0) {
            funs.setSession("tmpmsg_" + nim.currSess, msgtosend);
        }
        //清空聊天界面
        $(".chat-pane").html('');
        //获取缓存的草稿内容
        var tmgmsgtosend = funs.getSession("tmpmsg_" + toSel);
        if (tmgmsgtosend) {
            this.find("#input").val(tmgmsgtosend);
        } else {
            this._clearInput();
        }
    };
    //重设聊天界面的高度
    _setChatHeight() {
        var phoneH = document.documentElement.clientHeight || $(window).height();
        var topBarH = this.find('.topbar').outerHeight();
        var inputH = this.find('.input-pane').outerHeight();
        var aaa = phoneH - topBarH - inputH;
        this.find('.chat-pane').css('height', aaa + 'px');
    };
    // 保存手机号，创建临时项目
    _evt_saveMobile() {
        var that = this;
        var mobile = this.find('.mobile').val().trim();
        // 验证手机号
        if (mobile != '') {
            if (!that.checkPhone(mobile)) {
                funs.tip('请填正确的手机号', '', 'fail');
                return;
            }
        } else {
            funs.tip('手机号不能为空', '', 'fail');
            return;
        }
        var city = model.globalData.selected_city.city_name;
        var prov = model.globalData.selected_province.province_name;
        var sem = localStorage.getItem("repair_statistics");
        let repairInfo = {
            mobile: mobile,
            city: city,
            prov: prov,
            sem: sem,
            cate: '1'
        };
        var succ = function (json) {
            that.find('.fakeSavePhone').parent().html('<pre><p>登记成功，请耐心等待我们与您联系！</p><span class ="gray">' + mobile + '</span></pre><img class="triangle" src="`{VIEWSURL}`/m/customService/serviceChatPaneTpl/images/triangle2.png">');
            //记录已经登记过的用户，下次不再登记
            localStorage.setItem('hasSavePhone', mobile);
            setTimeout(function () {
                that.switchSession('4');
                that.find('.hoverInput').hide();
                that.find('#input').focus();
            }, 3000);

        };
        var fail = function (json: tomato.PError) {
            that.find('.fakeSavePhone').parent().html('<pre><p>登记成功，请耐心等待我们与您联系！</p><span class ="gray">' + mobile + '</span></pre><img class="triangle" src="`{VIEWSURL}`/m/customService/serviceChatPaneTpl/images/triangle2.png">');
            setTimeout(function () {
                that.switchSession('4');
                that.find('#input').focus();
                that.find('.hoverInput').hide();
            }, 3000);
        }
        // 判断是安装还是报修
        var isRepair = document.referrer.indexOf('Repair') > 0?true:false;
        if(isRepair){
            repairInfo.cate = '2';
        }
        api.InquiryDraft(repairInfo, succ, fail);
    }
    /**检测手机号 */
    private checkPhone(phone) {
        if (!(/^1(3|4|5|7|8)\d{9}$/.test(phone))) {
            return false;
        }
        return true;
    }
    protected _afterUninstallTo() {
        this.switchSession('');
    }

}
export = VPresenter;