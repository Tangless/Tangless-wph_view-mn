import * as tomato from "@po-to/tomato";
import * as project from "views/global/common/Project";
import * as Vue from "vue";
import * as model from "views/global/common/Model";
import * as api from "views/global/common/API";
import * as funs from "views/global/common/Funs";
import ChatRoom = require('views/m/ChatRoom');
import ImageUploader = require('views/m/project/ImageUploader');

class VPresenter extends project.VPresenter {
    /**模块 */
    private RepairEditCurrent_vue: any;
    /**循环选择的数据源 */
    private demand_config;
    private img;

    private vueData: {
        typeClick: boolean,
        faultClick: boolean,
        colorClick: boolean,
        spanClick: boolean,
        OtherClick: boolean,
        otherSpan: string
        clicked: boolean,
        user: any,
        demand: any,
        Url: {
            typeUrl: any[],
            faultUrl: any[],
            colorUrl: any[],
            spanUrl: any[]
        }

    };
    constructor(view: tomato.VPView, parent?: tomato.VPresenter, vpid?: string) {
        super(view, parent, vpid);
        var vueDom = this.find("#RepairEditCurrent_vue").get(0);
        this.vueData = {
            typeClick: false,
            faultClick: false,
            colorClick: false,
            spanClick: false,
            OtherClick: false,
            otherSpan: '',
            clicked: true,
            user: {},
            demand: {},
            Url: {
                typeUrl: [],
                faultUrl: [],
                colorUrl: [],
                spanUrl: [],
            }
        };
        var that = this;
        let RepairEditCurrent_vue: any = this.RepairEditCurrent_vue = new Vue({
            el: vueDom,
            data: that.vueData,
            watch: {
                'demand.address': "checkData",
                // 'demand.size': "checkData",
                'demand.budget': "checkData"
            },
            methods: {
                checkData: function () {
                    RepairEditCurrent_vue.demand.address = RepairEditCurrent_vue.demand.address.replace(/[^(\u4e00-\u9fa5)]/g, '');
                    // RepairEditCurrent_vue.demand.size = (RepairEditCurrent_vue.demand.size).toString().replace(/[^\d\.]/g, '');
                    RepairEditCurrent_vue.demand.budget = (RepairEditCurrent_vue.demand.budget).toString().replace(/[^\d\.]/g, '');
                    RepairEditCurrent_vue.checkInfo();
                },
                checkInfo: function () {
                    //检验必填项
                    if (RepairEditCurrent_vue.demand.address) {
                        RepairEditCurrent_vue.clicked = false;
                    } else {
                        RepairEditCurrent_vue.clicked = true;
                    }
                },
                //展开下拉菜单
                showType: function () {
                    RepairEditCurrent_vue.typeClick = !RepairEditCurrent_vue.typeClick;
                    RepairEditCurrent_vue.faultClick = false;
                    RepairEditCurrent_vue.colorClick = false;
                    RepairEditCurrent_vue.spanClick = false;
                },
                showFault: function () {
                    RepairEditCurrent_vue.faultClick = !RepairEditCurrent_vue.faultClick;
                    RepairEditCurrent_vue.typeClick = false;
                    RepairEditCurrent_vue.colorClick = false;
                    RepairEditCurrent_vue.spanClick = false;
                },
                showColor: function () {
                    RepairEditCurrent_vue.colorClick = !RepairEditCurrent_vue.colorClick;
                    RepairEditCurrent_vue.typeClick = false;
                    RepairEditCurrent_vue.faultClick = false;
                    RepairEditCurrent_vue.spanClick = false;
                },
                showSpan: function () {
                    if (RepairEditCurrent_vue.OtherClick) {
                        RepairEditCurrent_vue.showCloseAll();
                    } else {
                        RepairEditCurrent_vue.spanClick = !RepairEditCurrent_vue.spanClick;
                        RepairEditCurrent_vue.typeClick = false;
                        RepairEditCurrent_vue.faultClick = false;
                        RepairEditCurrent_vue.colorClick = false;
                    }

                },
                showCloseAll: function () {
                    RepairEditCurrent_vue.spanClick = false;
                    RepairEditCurrent_vue.typeClick = false;
                    RepairEditCurrent_vue.faultClick = false;
                    RepairEditCurrent_vue.colorClick = false;
                    RepairEditCurrent_vue.OtherClick = false;
                },
                //参数选择
                getType: function (event) {
                    let id = event.target.getAttribute('value');
                    let name = event.target.innerHTML;
                    that.setTpye(id);

                    RepairEditCurrent_vue.showType();

                },
                getfault: function (event) {
                    RepairEditCurrent_vue.demand.malf = event.target.getAttribute('value');
                    RepairEditCurrent_vue.demand.malf_name = event.target.innerHTML;
                    RepairEditCurrent_vue.showFault();
                },
                getColor: function (event) {
                    RepairEditCurrent_vue.demand.color = event.target.getAttribute('value');
                    RepairEditCurrent_vue.demand.color_name = event.target.innerHTML;
                    RepairEditCurrent_vue.showColor();
                },
                getSpan: function (event) {
                    let id = event.target.getAttribute('value');
                    let name = event.target.innerHTML;
                    // RepairEditCurrent_vue.demand.span = name;
                    RepairEditCurrent_vue.demand.span_id = id;
                    if (4 == id) {
                        RepairEditCurrent_vue.showCloseAll();
                        RepairEditCurrent_vue.OtherClick = true;
                        RepairEditCurrent_vue.otherSpan = '';
                    } else {
                        RepairEditCurrent_vue.demand.span = name;
                        RepairEditCurrent_vue.showSpan();
                    }
                },
                getSure: function () {
                    RepairEditCurrent_vue.demand.span = RepairEditCurrent_vue.otherSpan;
                    RepairEditCurrent_vue.showCloseAll();
                },
                getClean: function () {
                    // RepairEditCurrent_vue.otherSpan = '';
                    RepairEditCurrent_vue.showCloseAll();
                    setTimeout(function () {
                        RepairEditCurrent_vue.showSpan();
                    }, 0);

                }, /**提交 */
                submitEdit: function () {
                    var demand_id = parseInt(RepairEditCurrent_vue.demand.id);
                    var type = parseInt(RepairEditCurrent_vue.demand.type);
                    var size = parseFloat(RepairEditCurrent_vue.demand.size);
                    var color = parseInt(RepairEditCurrent_vue.demand.color);
                    var fault = parseInt(RepairEditCurrent_vue.demand.malf);
                    var span = RepairEditCurrent_vue.demand.span;
                    var budget = RepairEditCurrent_vue.demand.budget ? parseFloat(RepairEditCurrent_vue.demand.budget) : 0;
                    var address = RepairEditCurrent_vue.demand.address;
                    var image = RepairEditCurrent_vue.demand.image;
                    var note = RepairEditCurrent_vue.demand.note ? RepairEditCurrent_vue.demand.note : undefined;
                    let repairEditInfo = {
                        id: demand_id,
                        type: type,
                        size: size,
                        color: color,
                        malf: fault,
                        budget: budget,
                        span: span,
                        addr: address,
                        remark: note
                    }
                    if ("data:image/jpeg;base64," == model.globalData.current_demand.image.substring(0, 23)) {
                        //提交图片
                        tomato.getVPresenter<ImageUploader>(funs.moduleToUrl('m/project/ImageUploader'), (ImageUploader) => {
                            ImageUploader.fileUpload();
                        });
                    }

                    api.EditDemand(repairEditInfo, function (data: any) {
                        // window.location.reload();
                        RepairEditCurrent_vue.demand.budgetFormat.budget = api.budget(budget).budget;
                        RepairEditCurrent_vue.demand.budgetFormat.unit = api.budget(budget).unit;
                        that.setGlobalData();
                        // model.globalData.current_demand = data.demand_info.demand;
                        funs.viewHistory.go(-1);
                    }, function (error: tomato.PError) {
                        console.log(error);
                        funs.tip(error.note, "", "fail");
                    });
                },
            }
        });
        this._watchEvent();
    }
    /**编辑项目时，将demand的type传过来，以便做样式上的初始化 */
    public setInit(typeId) {
        this.getGlobalData();
        this.setTpye(typeId);
    }
    public setTpye(typeId) {
        let def = this.demand_config.typeOptions[typeId].def;
        let name = this.demand_config.typeOptions[typeId].name;

        this.RepairEditCurrent_vue.demand.type = typeId;
        this.RepairEditCurrent_vue.demand.type_name = name;

        this.RepairEditCurrent_vue.Url.colorUrl = this.demand_config.colorOptions = def.colorOptions;
        this.RepairEditCurrent_vue.Url.spanUrl = this.demand_config.spanOptions = def.spanOptions;


        // this.RepairEditCurrent_vue.demand.location = 1;
        // this.RepairEditCurrent_vue.demand.location_name = this.RepairEditCurrent_vue.Url.faultUrl[1].name;
        this.RepairEditCurrent_vue.demand.color = def.color;
        this.RepairEditCurrent_vue.demand.color_name = this.RepairEditCurrent_vue.Url.colorUrl[def.color].name;
        this.RepairEditCurrent_vue.demand.span = this.RepairEditCurrent_vue.Url.spanUrl[def.span].name;
        this.RepairEditCurrent_vue.demand.span_id = def.span;

        //检测必填项
        this.RepairEditCurrent_vue.checkInfo();

    }
    setGlobalData() {
        //this.vueData => globalData
        var imgUrl = model.globalData.current_demand.image;
        $.extend(true, model.globalData.user, this.vueData.user);
        $.extend(true, model.globalData.current_demand, this.vueData.demand);
        $.extend(true, model.globalData.demand_config, this.demand_config);
        model.globalData.current_demand.image = imgUrl;

    }
    getGlobalData() {
        //globalData => this.vueData
        this.img = $(".imageUrl").attr("src");
        this.vueData.user = funs.deepCopy(model.globalData.user);
        this.vueData.demand = funs.deepCopy(model.globalData.current_demand);
        var demand_config = this.demand_config = funs.deepCopy(model.globalData.demand_config);
        this.vueData.Url = {
            typeUrl: [demand_config.typeOptions[2], demand_config.typeOptions[5], demand_config.typeOptions[3], demand_config.typeOptions[1], demand_config.typeOptions[4], demand_config.typeOptions[0],],
            faultUrl: [demand_config.faultOptions[1], demand_config.faultOptions[2], demand_config.faultOptions[3], demand_config.faultOptions[4], demand_config.faultOptions[5], demand_config.faultOptions[0],],
            colorUrl: [demand_config.colorOptions[3], demand_config.colorOptions[2], demand_config.colorOptions[1]],
            spanUrl: [demand_config.spanOptions[1], demand_config.spanOptions[2], demand_config.spanOptions[3], demand_config.spanOptions[4]],
        };
        if (model.globalData.current_demand.budget == 0) {
            this.vueData.demand.budget = '';
        }
    }
}
export = VPresenter;