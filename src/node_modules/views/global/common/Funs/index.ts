import * as tomato from '@po-to/tomato';
import * as tdom from "@po-to/tomato-jquery";
import Tip = require('views/m/common/Tip')

export let viewHistory = window.history;

window['tomato'] = tomato;

let metaDataSites: { [key: string]: string } = (`{SITES}` as any);

let siteMap = (function (sites) {
    let map = {};
    for (let domain in sites) {
        let folder = sites[domain];
        if (folder) {
            map[folder] = domain;
        }
    }
    return map;
})(metaDataSites)

export function moduleToUrl(id: string): string {
    for (let folder in siteMap) {
        if (id.startsWith(folder)) {
            return "`{HTTP}`" + siteMap[folder] + id.replace(folder, '') + '.js';
        }
    }
    return '';
}
export function deepCopy<T>(data: T): T {
    return JSON.parse(JSON.stringify(data));
}
export function assinData<T>(target: T, ...args): T {
    for (let item of args) {
        for (let key in target) {
            if (target.hasOwnProperty(key)) {
                target[key] = item[key];
            }
        }
    }
    return target;
}
export function setCookie(key: string, value: string, expiredays?: number) {
    let api = "`{APIURL}`";
    let apiHost = api.substr(api.indexOf('//') + 2);
    let cookie: string[] = [apiHost + '$' + key + "=" + encodeURIComponent(value)];
    if (expiredays) {
        let exdate = new Date();
        exdate.setDate(exdate.getDate() + expiredays);
        cookie.push("expires=" + (exdate as any).toGMTString());
    }
    cookie.push('path=/');
    let arr = document.domain.split(".");
    arr = ['', arr[arr.length - 2], arr[arr.length - 1]];
    cookie.push('domain=' + arr.join("."));
    document.cookie = cookie.join("; ")
}
export function setCookie2(key: string, value: string, expiredays?: number) {
    let cookie: string[] = [key + "=" + encodeURIComponent(value)];
    if (expiredays) {
        let exdate = new Date();
        exdate.setDate(exdate.getDate() + expiredays);
        cookie.push("expires=" + (exdate as any).toGMTString());
    }
    cookie.push('path=/');
    let arr = document.domain.split(".");
    arr = ['', arr[arr.length - 2], arr[arr.length - 1]];
    cookie.push('domain=' + arr.join("."));
    document.cookie = cookie.join("; ")
}
export function getCookie2(key: string) {

    var arr, reg = new RegExp("(^| )" + name + "=([^;]*)(;|$)");
    if (arr = document.cookie.match(reg)) {
        return (window as any).unescape(arr[2]);
    } else {
        return null;
    }
}
export function setSession(key: string, value: string) {
    localStorage.setItem(key, value);
}
export function getSession(key: string) {
    localStorage.getItem(key);
}
export function openDialog(mod: tomato.VPresenter, openStyle, options?) {
    tdom.open(mod, openStyle, options);
}
export function loadPage(mod: tomato.VPresenter) {
    let vpid = mod.vpid.replace('.js','.html');
    var ar = vpid.split('/');
    ar[ar.length-1] = ar[ar.length-1].toLowerCase();
    vpid = ar.join('/');
    let cmd = new tomato.Cmd(vpid, (mod.view as JQuery).attr('data-title') || vpid, true);
    let curMod = tomato.application.content;
    cmd.execute = function () {
        (mod as tdom.VPresenter).setInstallEffect(false);
        tomato.application.appendChild(mod);
        this.success();
    }
    cmd.undo = function () {
        curMod && (curMod as tdom.VPresenter).setInstallEffect(true);
        tomato.application.appendChild(curMod as tomato.VPresenter);
        this.success();
    }
    cmd.redo = function () {
        (mod as tdom.VPresenter).setInstallEffect(true);
        tomato.application.appendChild(mod);
        this.success();
    }
    tomato.application.history.push(cmd);
}
export function tip(title: string, note: string = '', type: string = 'succ') {
    /*
         title: 必填； －－提示信息标题；
         note:选填； －－提示信息详情；
         type:选填；("succ":成功提示－绿色对勾图标, "fail": 错误提示－红色叉叉图标)，默认"succ"
    */
    tomato.getVPresenter<Tip>(moduleToUrl('m/common/Tip'), (tip) => {
        tip.setTip(title, note, type);
        tdom.open(tip, tdom.DialogTarget.Blank, {
            size: { width: '90%', height: tomato.DialogSize.Content },
            effect: tdom.DialogEffect.swipeUp,
            position: { x: tomato.DialogPosition.Center, y: tomato.DialogPosition.Bottom },
            offset: { x: 0, y: -20 },
            masked: true,
        });
    });
}
export function isAndroid() {
    var u = navigator.userAgent;
    if (u.indexOf('Android') > -1 || u.indexOf('Linux') > -1) {
        return true;
    }
    return false;
}
export function qs(name) {
    var match = RegExp('[?&]' + name + '=([^&]*)').exec(window.location.search);
    return match && decodeURIComponent(match[1].replace(/\+/g, ' '));
}
export function budget(money): { budget: string, unit: string } {
    function std_money_format_in_th(money) {
        money = money + "";
        var intLen = money.split('.')[0].length;
        if (intLen > 4) {
            return { "budget": std_num_format(money / 10000), "unit": "万" }
        } else if (intLen > 3) {
            return { "budget": std_num_format(money / 1000), "unit": "千" }
        } else if (intLen > 2) {
            return { "budget": std_num_format(money / 100), "unit": "百" }
        } else {
            return { "budget": money, "unit": "" };
        }
    }
    function std_num_format(num) {
        num += '';
        var parts = num.split('.');
        var float_cnt = 0;
        if (parts.length > 1) {
            var deci = parts[1];
            float_cnt = (parseInt(deci) > 0) ? deci.length : 0;
        }

        var pureRes = number_format(num, Math.min(2, float_cnt));
        var ptIndex = pureRes.indexOf('.');
        if (ptIndex === -1) {
            // 整数
            return pureRes;
        } else {
            // 下面这些处理，是为了死也要保证小数点后末尾不能为0。即使这是不科学的四舍五入，产品及相关人员也认为这比科学要更好。好吧，我妥协
            var num: any = parseInt(pureRes.substr(ptIndex + 1));
            if (0 === num) {
                // 123.00型
                return pureRes.substr(0, ptIndex);
            } else if (0 === num % 10) {
                // 123.40型
                return pureRes.substr(0, pureRes.length - 1);
            } else {
                return pureRes;
            }
        }
    }
    function number_format(number, decimals, decPoint?, thousandsSep?) { // eslint-disable-line camelcase

        number = (number + '').replace(/[^0-9+\-Ee.]/g, '')
        var n = !isFinite(+number) ? 0 : +number
        var prec = !isFinite(+decimals) ? 0 : Math.abs(decimals)
        var sep = (typeof thousandsSep === 'undefined') ? ',' : thousandsSep
        var dec = (typeof decPoint === 'undefined') ? '.' : decPoint
        var s: any = '';
        var toFixedFix = function (n, prec) {
            var k = Math.pow(10, prec)
            return '' + (Math.round(n * k) / k)
                .toFixed(prec)
        }
        // @todo: for IE parseFloat(0.55).toFixed(0) = 0;
        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.')
        if (s[0].length > 3) {
            s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep)
        }
        if ((s[1] || '').length < prec) {
            s[1] = s[1] || ''
            s[1] += new Array(prec - s[1].length + 1).join('0')
        }

        return s.join(dec)
    }
    let data = std_money_format_in_th(money);
    if (data.budget == "" || data.budget == 0) {
        data.budget = "";
    }
    return data;
    // if (money.budget == "" || money.budget == 0) {
    //     money.budget = "议价";
    // }
    // return money;
    // this.find('.format-budget').html(money.budget).next('.budget-unit').html(money.unit);
}